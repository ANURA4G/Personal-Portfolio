<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Anuraag Rai S - AI & Data Science Student</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-blue: #1e40af;
            --secondary-blue: #3b82f6;
            --accent-purple: #8b5cf6;
            --success-green: #10b981;
            --dark-bg: #0f1419;
            --card-bg: rgba(30, 41, 59, 0.8);
            --text-light: #e2e8f0;
            --text-muted: #94a3b8;
            --gradient-primary: linear-gradient(135deg, #1e40af, #8b5cf6);
            --gradient-secondary: linear-gradient(135deg, #10b981, #3b82f6);
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: var(--dark-bg);
            color: var(--text-light);
            overflow-x: hidden;
            line-height: 1.6;
        }

        /* Animated Background Canvas */
        #bg-canvas {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            pointer-events: none;
        }

        /* Navigation */
        nav {
            position: fixed;
            top: 0;
            width: 100%;
            background: rgba(15, 20, 25, 0.9);
            backdrop-filter: blur(10px);
            z-index: 1000;
            padding: 1rem 0;
            transition: all 0.3s ease;
        }

        .nav-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: bold;
            background: var(--gradient-primary);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
        }

        .nav-links a {
            color: var(--text-light);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
            position: relative;
        }

        .nav-links a:hover {
            color: var(--secondary-blue);
        }

        .nav-links a::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--gradient-primary);
            transition: width 0.3s ease;
        }

        .nav-links a:hover::after {
            width: 100%;
        }

        /* Hero Section */
        .hero {
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .hero-content {
            z-index: 2;
            max-width: 800px;
            padding: 0 2rem;
        }

        .hero h1 {
            font-size: 4rem;
            font-weight: 700;
            margin-bottom: 1rem;
            background: var(--gradient-primary);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            opacity: 0;
            transform: translateY(50px);
        }

        .hero .subtitle {
            font-size: 1.5rem;
            color: var(--text-muted);
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(30px);
        }

        .hero .description {
            font-size: 1.2rem;
            margin-bottom: 3rem;
            opacity: 0;
            transform: translateY(30px);
        }

        .cta-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
            opacity: 0;
            transform: translateY(30px);
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn-primary {
            background: var(--gradient-primary);
            color: white;
        }

        .btn-secondary {
            background: transparent;
            color: var(--text-light);
            border: 2px solid var(--secondary-blue);
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(59, 130, 246, 0.3);
        }

        /* Section Styling */
        .section {
            padding: 8rem 0;
            max-width: 1200px;
            margin: 0 auto;
            padding-left: 2rem;
            padding-right: 2rem;
        }

        .section h2 {
            font-size: 3rem;
            text-align: center;
            margin-bottom: 4rem;
            background: var(--gradient-primary);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        /* Projects Section */
        .projects-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 2rem;
            margin-top: 3rem;
        }

        .project-card {
            background: var(--card-bg);
            border-radius: 16px;
            padding: 2rem;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(59, 130, 246, 0.2);
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .project-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(59, 130, 246, 0.1), transparent);
            transition: left 0.5s ease;
        }

        .project-card:hover::before {
            left: 100%;
        }

        .project-card:hover {
            transform: translateY(-10px) rotateX(5deg);
            box-shadow: 0 20px 40px rgba(59, 130, 246, 0.2);
            border-color: var(--secondary-blue);
        }

        .project-card h3 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            color: var(--secondary-blue);
        }

        .project-card p {
            color: var(--text-muted);
            margin-bottom: 1.5rem;
            line-height: 1.6;
        }

        .project-tech {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .tech-tag {
            background: rgba(139, 92, 246, 0.2);
            color: var(--accent-purple);
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            border: 1px solid rgba(139, 92, 246, 0.3);
        }

        .project-status {
            display: inline-block;
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .status-progress {
            background: rgba(245, 158, 11, 0.2);
            color: #f59e0b;
            border: 1px solid rgba(245, 158, 11, 0.3);
        }

        .status-complete {
            background: rgba(16, 185, 129, 0.2);
            color: var(--success-green);
            border: 1px solid rgba(16, 185, 129, 0.3);
        }

        /* Experience Timeline */
        .timeline {
            position: relative;
            padding: 2rem 0;
        }

        .timeline::before {
            content: '';
            position: absolute;
            left: 50%;
            top: 0;
            bottom: 0;
            width: 2px;
            background: var(--gradient-primary);
            transform: translateX(-50%);
        }

        .timeline-item {
            display: flex;
            margin-bottom: 3rem;
            position: relative;
        }

        .timeline-item:nth-child(odd) {
            flex-direction: row-reverse;
        }

        .timeline-content {
            background: var(--card-bg);
            padding: 2rem;
            border-radius: 16px;
            width: 45%;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(59, 130, 246, 0.2);
            position: relative;
        }

        .timeline-item::before {
            content: '';
            position: absolute;
            left: 50%;
            top: 2rem;
            width: 16px;
            height: 16px;
            background: var(--secondary-blue);
            border-radius: 50%;
            transform: translateX(-50%);
            border: 4px solid var(--dark-bg);
            z-index: 2;
        }

        .timeline-content h3 {
            color: var(--secondary-blue);
            margin-bottom: 0.5rem;
        }

        .timeline-content .role {
            color: var(--accent-purple);
            font-weight: 600;
            margin-bottom: 1rem;
        }

        .timeline-content .education-tech {
            margin-top: 1rem;
        }

        /* Skills Section */
        .skills-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            margin-top: 3rem;
        }

        .skill-category {
            background: var(--card-bg);
            padding: 2rem;
            border-radius: 16px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(59, 130, 246, 0.2);
            text-align: center;
            transition: all 0.3s ease;
        }

        .skill-category:hover {
            transform: translateY(-5px);
            border-color: var(--secondary-blue);
        }

        .skill-category h3 {
            color: var(--secondary-blue);
            margin-bottom: 1.5rem;
            font-size: 1.3rem;
        }

        .skill-items {
            display: flex;
            flex-wrap: wrap;
            gap: 0.8rem;
            justify-content: center;
        }

        .skill-item {
            background: rgba(59, 130, 246, 0.1);
            color: var(--secondary-blue);
            padding: 0.5rem 1rem;
            border-radius: 25px;
            font-size: 0.9rem;
            border: 1px solid rgba(59, 130, 246, 0.3);
            transition: all 0.3s ease;
        }

        .skill-item:hover {
            background: rgba(59, 130, 246, 0.2);
            transform: scale(1.05);
        }

        /* Contact Section */
        .contact-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 4rem;
            align-items: center;
        }

        .contact-info h3 {
            color: var(--secondary-blue);
            margin-bottom: 2rem;
            font-size: 2rem;
        }

        .contact-item {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1.5rem;
            padding: 1rem;
            background: var(--card-bg);
            border-radius: 10px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(59, 130, 246, 0.2);
            transition: all 0.3s ease;
        }

        .contact-item:hover {
            transform: translateX(10px);
            border-color: var(--secondary-blue);
        }

        .contact-form {
            background: var(--card-bg);
            padding: 2rem;
            border-radius: 16px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(59, 130, 246, 0.2);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            color: var(--secondary-blue);
            font-weight: 600;
        }

        .form-group input,
        .form-group textarea {
            width: 100%;
            padding: 1rem;
            background: rgba(30, 41, 59, 0.5);
            border: 1px solid rgba(59, 130, 246, 0.3);
            border-radius: 8px;
            color: var(--text-light);
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-group input:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: var(--secondary-blue);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .form-group textarea {
            height: 120px;
            resize: vertical;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .hero h1 {
                font-size: 2.5rem;
            }

            .hero .subtitle {
                font-size: 1.2rem;
            }

            .nav-links {
                display: none;
            }

            .timeline::before {
                left: 2rem;
            }

            .timeline-item {
                flex-direction: row;
            }

            .timeline-content {
                width: calc(100% - 4rem);
                margin-left: 4rem;
            }

            .timeline-item::before {
                left: 2rem;
            }

            .contact-container {
                grid-template-columns: 1fr;
                gap: 2rem;
            }

            .cta-buttons {
                flex-direction: column;
                align-items: center;
            }

            .section {
                padding: 4rem 0;
            }

            .section h2 {
                font-size: 2rem;
            }
        }

        /* Scroll animations */
        .fade-in {
            opacity: 0;
            transform: translateY(30px);
        }

        .slide-in-left {
            opacity: 0;
            transform: translateX(-50px);
        }

        .slide-in-right {
            opacity: 0;
            transform: translateX(50px);
        }

        /* Social Links */
        .social-links {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 2rem;
        }

        .social-link {
            width: 50px;
            height: 50px;
            background: var(--card-bg);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--secondary-blue);
            text-decoration: none;
            border: 1px solid rgba(59, 130, 246, 0.3);
            transition: all 0.3s ease;
        }

        .social-link:hover {
            background: var(--secondary-blue);
            color: white;
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(59, 130, 246, 0.3);
        }

        /* Download Resume Button */
        .download-resume {
            background: var(--gradient-secondary);
            color: white;
            padding: 15px 30px;
            border-radius: 50px;
            text-decoration: none;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            margin-top: 2rem;
            transition: all 0.3s ease;
        }

        .download-resume:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 30px rgba(16, 185, 129, 0.3);
        }

        .resume-info {
            margin-top: 1rem;
            font-size: 0.9rem;
            color: var(--text-muted);
        }
    </style>
</head>
<body>
    <canvas id="bg-canvas"></canvas>
    
    <!-- Navigation -->
    <nav>
        <div class="nav-container">
            <div class="logo">Anuraag Rai S</div>
            <ul class="nav-links">
                <li><a href="#home">Home</a></li>
                <li><a href="#projects">Projects</a></li>
                <li><a href="#experience">Experience</a></li>
                <li><a href="#education">Education</a></li>
                <li><a href="#skills">Skills</a></li>
                <li><a href="#contact">Contact</a></li>
            </ul>
        </div>
    </nav>

    <!-- Hero Section -->
    <section id="home" class="hero">
        <div class="hero-content">
            <h1 class="hero-title">Anuraag Rai S</h1>
            <p class="subtitle">AI & Data Science Student</p>
            <p class="description">
                Passionate AI & Data Science student with expertise in machine learning, deep learning, and statistical analysis. 
                Currently pursuing B.Tech in AI & Data Science (2024-2028) with hands-on experience in real-world problems.Active participant in hackathons and technical events with strong 
                leadership and project management experience.
            </p>
            <div class="cta-buttons">
                <a href="#projects" class="btn btn-primary">View Projects</a>
                <a href="#contact" class="btn btn-secondary">Get In Touch</a>
            </div>
            <div class="social-links">
                <a href="mailto:anuraaganuraagrai@gmail.com" class="social-link" title="Email">✉</a>
                <a href="https://github.com/ANURA4G/Personal-Portfolio" class="social-link" title="GitHub">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.30.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                    </svg>
                </a>
                <a href="https://linkedin.com/in/anuraagrai" class="social-link" title="LinkedIn">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433a2.062 2.062 0 01-2.063-2.065 2.064 2.064 0 112.063 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                    </svg>
                </a>
            </div>
        </div>
    </section>

    <!-- Projects Section -->
    <section id="projects" class="section">
        <h2>Featured Projects</h2>
        <div class="projects-grid">
            <div class="project-card fade-in">
                <h3>Urban Service Prioritization Model</h3>
                <div class="project-status status-progress">In Progress</div>
                <p>
                    An AI-driven system that prioritizes urban service requests using machine learning algorithms 
                    to optimize resource allocation and improve citizen satisfaction. Implements predictive analytics 
                    and real-time data processing.
                </p>
                <div class="project-tech">
                    <span class="tech-tag">Python</span>
                    <span class="tech-tag">TensorFlow</span>
                    <span class="tech-tag">Pandas</span>
                    <span class="tech-tag">API</span>
                </div>
            </div>

            <div class="project-card fade-in">
                <h3>Machine Learning Stock Price Predictor</h3>
                <div class="project-status status-complete">Completed</div>
                <p>
                    A comprehensive stock price prediction system using LSTM neural networks and technical indicators. 
                    Features real-time data fetching, sentiment analysis from news, and interactive visualization 
                    dashboard for investment insights.
                </p>
                <div class="project-tech">
                    <span class="tech-tag">Python</span>
                    <span class="tech-tag">LSTM</span>
                    <span class="tech-tag">Pandas</span>
                    <span class="tech-tag">Plotly</span>
                    <span class="tech-tag">API Integration</span>
                </div>
            </div>

            <div class="project-card fade-in">
                <h3>Computer Vision Object Detection</h3>
                <div class="project-status status-complete">Completed</div>
                <p>
                    Real-time object detection system using YOLO algorithm with custom dataset training. 
                    Implements edge detection, image preprocessing, and accurate multi-class object recognition 
                    with bounding box visualization.
                </p>
                <div class="project-tech">
                    <span class="tech-tag">Python</span>
                    <span class="tech-tag">OpenCV</span>
                    <span class="tech-tag">YOLO</span>
                    <span class="tech-tag">Deep Learning</span>
                </div>
            </div>

            <div class="project-card fade-in">
                <h3>Real-Time Network Security Monitor</h3>
                <div class="project-status status-complete">Completed</div>
                <p>
                    A comprehensive network monitoring solution that detects anomalies and potential security threats 
                    in real-time. Features machine learning-based intrusion detection and automated alert systems.
                </p>
                <div class="project-tech">
                    <span class="tech-tag">Python</span>
                    <span class="tech-tag">NumPy</span>
                    <span class="tech-tag">Network APIs</span>
                    <span class="tech-tag">ML</span>
                </div>
            </div>

            <div class="project-card fade-in">
                <h3>E-commerce UI Replication</h3>
                <div class="project-status status-complete">Completed</div>
                <p>
                    A pixel-perfect recreation of a modern e-commerce platform with responsive design, 
                    interactive features, and optimized user experience. Built with modern web technologies.
                </p>
                <div class="project-tech">
                    <span class="tech-tag">HTML</span>
                    <span class="tech-tag">CSS</span>
                    <span class="tech-tag">JavaScript</span>
                    <span class="tech-tag">Responsive</span>
                </div>
            </div>

            <div class="project-card fade-in">
                <h3>C-Language Console Applications</h3>
                <div class="project-status status-complete">Completed</div>
                <p>
                    A collection of console-based applications demonstrating fundamental programming concepts, 
                    data structures, and algorithms. Includes games, utilities, and educational tools.
                </p>
                <div class="project-tech">
                    <span class="tech-tag">C</span>
                    <span class="tech-tag">Data Structures</span>
                    <span class="tech-tag">Algorithms</span>
                    <span class="tech-tag">Console</span>
                </div>
            </div>
        </div>
    </section>

    <!-- Experience Section -->
    <section id="experience" class="section">
        <h2>Experience & Leadership</h2>
        <div class="timeline">
            <div class="timeline-item slide-in-left">
                <div class="timeline-content">
                    <h3>TRENZ-2K25</h3>
                    <div class="role">Event Organizer</div>
                    <p>
                        Leading the organization of TRENZ-2K25, a major technical event. Responsible for 
                        coordinating activities, managing teams, and ensuring successful execution of 
                        multiple technical competitions and workshops.
                    </p>
                </div>
            </div>

            <div class="timeline-item slide-in-right">
                <div class="timeline-content">
                    <h3>STORK'S QUILL 2K25</h3>
                    <div class="role">Editorial Lead</div>
                    <p>
                        Serving as Editorial Lead for STORK'S QUILL 2K25, overseeing content creation, 
                        editorial processes, and publication workflows. Managing a team of writers and 
                        ensuring high-quality deliverables.
                    </p>
                </div>
            </div>

            <div class="timeline-item slide-in-left">
                <div class="timeline-content">
                    <h3>Various Hackathons</h3>
                    <div class="role">Active Participant</div>
                    <p>
                        Regular participant in hackathons and coding competitions, developing innovative 
                        solutions under time constraints. Experience in collaborative problem-solving 
                        and rapid prototyping.
                    </p>
                </div>
            </div>

            <div class="timeline-item slide-in-right">
                <div class="timeline-content">
                    <h3>Technical Presentations</h3>
                    <div class="role">Presenter</div>
                    <p>
                        Experienced in presenting technical concepts and project outcomes to diverse 
                        audiences. Skilled in creating engaging presentations and explaining complex 
                        topics in accessible ways.
                    </p>
                </div>
            </div>

            <div class="timeline-item slide-in-left">
                <div class="timeline-content">
                    <h3>AI/ML Certifications & Training</h3>
                    <div class="role">Continuous Learning</div>
                    <p>
                        Completed various online certifications and training programs in machine learning, 
                        deep learning, and data science. Participated in specialized workshops on 
                        computer vision, natural language processing, and cloud computing platforms.
                    </p>
                    <div class="project-tech education-tech">
                        <span class="tech-tag">Machine Learning</span>
                        <span class="tech-tag">Deep Learning</span>
                        <span class="tech-tag">Computer Vision</span>
                        <span class="tech-tag">NLP</span>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Education Section -->
    <section id="education" class="section">
        <h2>Education</h2>
        <div class="timeline">
            <div class="timeline-item slide-in-left">
                <div class="timeline-content">
                    <h3>B.Tech in Artificial Intelligence & Data Science</h3>
                    <div class="role">2024 - 2028</div>
                    <p>
                        Currently pursuing Bachelor of Technology in AI & Data Science with focus on machine learning, 
                        deep learning, natural language processing, and data analytics. Developing expertise in 
                        modern AI frameworks and statistical methods.
                    </p>
                    <div class="project-tech education-tech">
                        <span class="tech-tag">Machine Learning</span>
                        <span class="tech-tag">Deep Learning</span>
                        <span class="tech-tag">Statistics</span>
                        <span class="tech-tag">Data Analytics</span>
                    </div>
                </div>
            </div>

            <div class="timeline-item slide-in-right">
                <div class="timeline-content">
                    <h3>Higher Secondary Education</h3>
                    <div class="role">2022 - 2024</div>
                    <p>
                        Completed higher secondary education with focus on Science and Mathematics. 
                        Built strong foundation in analytical thinking and problem-solving skills 
                        that form the basis for AI and data science studies.
                    </p>
                    <div class="project-tech education-tech">
                        <span class="tech-tag">Mathematics</span>
                        <span class="tech-tag">Physics</span>
                        <span class="tech-tag">Chemistry</span>
                        <span class="tech-tag">Computer Science</span>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Skills Section -->
    <section id="skills" class="section">
        <h2>Technical Skills</h2>
        <div class="skills-container">
            <div class="skill-category fade-in">
                <h3>Programming Languages</h3>
                <div class="skill-items">
                    <span class="skill-item">Python</span>
                    <span class="skill-item">C</span>
                    <span class="skill-item">C++</span>
                    <span class="skill-item">SQL</span>
                    <span class="skill-item">HTML5</span>
                    <span class="skill-item">CSS3</span>
                    <span class="skill-item">JavaScript</span>
                    <span class="skill-item">R</span>
                </div>
            </div>

            <div class="skill-category fade-in">
                <h3>AI & Machine Learning</h3>
                <div class="skill-items">
                    <span class="skill-item">TensorFlow</span>
                    <span class="skill-item">PyTorch</span>
                    <span class="skill-item">Scikit-learn</span>
                    <span class="skill-item">Transformers</span>
                    <span class="skill-item">Pandas</span>
                    <span class="skill-item">NumPy</span>
                    <span class="skill-item">Matplotlib</span>
                    <span class="skill-item">Seaborn</span>
                    <span class="skill-item">OpenCV</span>
                    <span class="skill-item">NLTK</span>
                    <span class="skill-item">Deep Learning</span>
                    <span class="skill-item">Computer Vision</span>
                    <span class="skill-item">NLP</span>
                </div>
            </div>

            <div class="skill-category fade-in">
                <h3>Data Science & Analytics</h3>
                <div class="skill-items">
                    <span class="skill-item">Data Analysis</span>
                    <span class="skill-item">Statistical Modeling</span>
                    <span class="skill-item">Data Visualization</span>
                    <span class="skill-item">Feature Engineering</span>
                    <span class="skill-item">A/B Testing</span>
                    <span class="skill-item">Time Series Analysis</span>
                    <span class="skill-item">Predictive Modeling</span>
                    <span class="skill-item">Big Data Analytics</span>
                </div>
            </div>

            <div class="skill-category fade-in">
                <h3>Tools & Technologies</h3>
                <div class="skill-items">
                    <span class="skill-item">Git & GitHub</span>
                    <span class="skill-item">Jupyter Notebook</span>
                    <span class="skill-item">Google Colab</span>
                    <span class="skill-item">VS Code</span>
                    <span class="skill-item">Docker</span>
                    <span class="skill-item">API Development</span>
                    <span class="skill-item">RESTful APIs</span>
                    <span class="skill-item">Database Design</span>
                    <span class="skill-item">MongoDB</span>
                    <span class="skill-item">MySQL</span>
                    <span class="skill-item">PostgreSQL</span>
                    <span class="skill-item">AWS</span>
                    <span class="skill-item">Linux</span>
                </div>
            </div>

            <div class="skill-category fade-in">
                <h3>Soft Skills</h3>
                <div class="skill-items">
                    <span class="skill-item">Leadership</span>
                    <span class="skill-item">Event Management</span>
                    <span class="skill-item">Technical Writing</span>
                    <span class="skill-item">Public Speaking</span>
                    <span class="skill-item">Team Collaboration</span>
                    <span class="skill-item">Problem Solving</span>
                </div>
            </div>
        </div>
    </section>

    <!-- Contact Section -->
    <section id="contact" class="section">
        <h2>Get In Touch</h2>
        <div class="contact-container">
            <div class="contact-info">
                <h3>Let's Connect</h3>
                <p>
                    I'm always interested in discussing new opportunities, collaborations, 
                    or just having a conversation about AI, data science, and technology.
                </p>
                
                <div class="contact-item">
                    <span>📧</span>
                    <div>
                        <strong>Email</strong><br>
                        <a href="mailto:anuraaganuraagrai@gmail.com">anuraaganuraagrai@gmail.com</a>
                    </div>
                </div>

                <div class="contact-item">
                    <span>
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433a2.062 2.062 0 01-2.063-2.065 2.064 2.064 0 112.063 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                        </svg>
                    </span>
                    <div>
                        <strong>LinkedIn</strong><br>
                        <a href="https://www.linkedin.com/in/anuraag-rai-s-a605a0312">linkedin.com/in/ANURAAG RAI S</a>
                    </div>
                </div>

                <div class="contact-item">
                    <span>
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                        </svg>
                    </span>
                    <div>
                        <strong>GitHub</strong><br>
                        <a href="https://github.com/ANURA4G">github.com/anuraagrai</a>
                    </div>
                </div>

                <a href="#" class="download-resume" onclick="downloadResume()">
                    📄 Download Resume
                </a>
                <div class="resume-info">
                    <em>Updated: July 2025 | PDF Format</em>
                </div>
            </div>

            <form class="contact-form" onsubmit="handleSubmit(event)">
                <div class="form-group">
                    <label for="name">Name</label>
                    <input type="text" id="name" name="name" required>
                </div>

                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="email" id="email" name="email" required>
                </div>

                <div class="form-group">
                    <label for="subject">Subject</label>
                    <input type="text" id="subject" name="subject" required>
                </div>

                <div class="form-group">
                    <label for="message">Message</label>
                    <textarea id="message" name="message" required></textarea>
                </div>

                <button type="submit" class="btn btn-primary">Send Message</button>
            </form>
        </div>
    </section>

    <script>
        // Advanced Neural Network Background with Three.js
        let scene, camera, renderer, nodes = [], connections = [], dataFlows = [], brainMesh, holographicRings = [];
        let time = 0;

        function initBackground() {
            scene = new THREE.Scene();
            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('bg-canvas'), alpha: true });
            renderer.setSize(window.innerWidth, window.innerHeight);

            // Create Neural Network Nodes
            createNeuralNetwork();
            
            // Create Holographic Rings
            createHolographicRings();
            
            // Create Data Flow Streams
            createDataFlows();
            
            // Create 3D Brain Mesh
            createBrainMesh();

            camera.position.z = 800;
            animate();
        }

        function createNeuralNetwork() {
            const nodeGeometry = new THREE.SphereGeometry(2, 8, 8);
            const connectionGeometry = new THREE.BufferGeometry();
            
            // Create nodes in multiple layers (like a neural network)
            const layers = 5;
            const nodesPerLayer = 8;
            
            for (let layer = 0; layer < layers; layer++) {
                for (let i = 0; i < nodesPerLayer; i++) {
                    const angle = (i / nodesPerLayer) * Math.PI * 2;
                    const radius = 200 + layer * 100;
                    
                    const node = {
                        x: Math.cos(angle) * radius + (Math.random() - 0.5) * 100,
                        y: Math.sin(angle) * radius + (Math.random() - 0.5) * 100,
                        z: (layer - 2) * 150 + (Math.random() - 0.5) * 100,
                        pulse: Math.random() * Math.PI * 2,
                        layer: layer,
                        active: false
                    };
                    
                    // Create visual node
                    const material = new THREE.MeshBasicMaterial({
                        color: new THREE.Color().setHSL(0.6 + layer * 0.1, 0.8, 0.5),
                        transparent: true,
                        opacity: 0.7
                    });
                    
                    const mesh = new THREE.Mesh(nodeGeometry, material);
                    mesh.position.set(node.x, node.y, node.z);
                    scene.add(mesh);
                    
                    node.mesh = mesh;
                    nodes.push(node);
                }
            }
            
            // Create connections between nodes
            const connectionPositions = [];
            const connectionColors = [];
            
            nodes.forEach((node, i) => {
                // Connect to nearby nodes
                nodes.forEach((otherNode, j) => {
                    if (i !== j) {
                        const distance = Math.sqrt(
                            Math.pow(node.x - otherNode.x, 2) +
                            Math.pow(node.y - otherNode.y, 2) +
                            Math.pow(node.z - otherNode.z, 2)
                        );
                        
                        if (distance < 200 && Math.random() > 0.7) {
                            connectionPositions.push(node.x, node.y, node.z);
                            connectionPositions.push(otherNode.x, otherNode.y, otherNode.z);
                            
                            // Connection color based on layers
                            const color = new THREE.Color().setHSL(0.55 + Math.random() * 0.2, 0.6, 0.4);
                            connectionColors.push(color.r, color.g, color.b);
                            connectionColors.push(color.r, color.g, color.b);
                        }
                    }
                });
            });
            
            connectionGeometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(connectionPositions), 3));
            connectionGeometry.setAttribute('color', new THREE.BufferAttribute(new Float32Array(connectionColors), 3));
            
            const connectionMaterial = new THREE.LineBasicMaterial({
                vertexColors: true,
                transparent: true,
                opacity: 0.3,
                linewidth: 1
            });
            
            const connectionLines = new THREE.LineSegments(connectionGeometry, connectionMaterial);
            scene.add(connectionLines);
            connections.push(connectionLines);
        }

        function createHolographicRings() {
            for (let i = 0; i < 3; i++) {
                const ringGeometry = new THREE.RingGeometry(100 + i * 80, 110 + i * 80, 32);
                const ringMaterial = new THREE.MeshBasicMaterial({
                    color: new THREE.Color().setHSL(0.6 + i * 0.1, 0.8, 0.5),
                    transparent: true,
                    opacity: 0.2,
                    side: THREE.DoubleSide
                });
                
                const ring = new THREE.Mesh(ringGeometry, ringMaterial);
                ring.position.z = -200 - i * 100;
                ring.rotation.x = Math.PI / 2;
                scene.add(ring);
                holographicRings.push(ring);
            }
        }

        function createDataFlows() {
            // Create flowing data streams
            for (let i = 0; i < 20; i++) {
                const streamGeometry = new THREE.BufferGeometry();
                const streamPositions = [];
                const streamColors = [];
                
                // Create a curved path for data flow
                const startX = (Math.random() - 0.5) * 1000;
                const startY = (Math.random() - 0.5) * 1000;
                const startZ = -500;
                
                for (let j = 0; j < 50; j++) {
                    const t = j / 49;
                    const x = startX + Math.sin(t * Math.PI * 4) * 100;
                    const y = startY + Math.cos(t * Math.PI * 3) * 80;
                    const z = startZ + t * 1000;
                    
                    streamPositions.push(x, y, z);
                    
                    const color = new THREE.Color().setHSL(0.5 + t * 0.3, 0.8, 0.6);
                    streamColors.push(color.r, color.g, color.b);
                }
                
                streamGeometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(streamPositions), 3));
                streamGeometry.setAttribute('color', new THREE.BufferAttribute(new Float32Array(streamColors), 3));
                
                const streamMaterial = new THREE.LineBasicMaterial({
                    vertexColors: true,
                    transparent: true,
                    opacity: 0.6,
                    linewidth: 2
                });
                
                const streamLine = new THREE.Line(streamGeometry, streamMaterial);
                scene.add(streamLine);
                dataFlows.push({
                    line: streamLine,
                    speed: 0.01 + Math.random() * 0.02,
                    offset: Math.random() * Math.PI * 2
                });
            }
        }

        function createBrainMesh() {
            // Create a wireframe brain-like structure
            const brainGeometry = new THREE.IcosahedronGeometry(150, 2);
            const brainMaterial = new THREE.MeshBasicMaterial({
                color: 0x4a90e2,
                wireframe: true,
                transparent: true,
                opacity: 0.1
            });
            
            brainMesh = new THREE.Mesh(brainGeometry, brainMaterial);
            brainMesh.position.set(0, 0, -300);
            scene.add(brainMesh);
        }

        function animate() {
            requestAnimationFrame(animate);
            time += 0.01;

            // Animate neural network nodes
            nodes.forEach((node, i) => {
                node.pulse += 0.05;
                const pulseIntensity = Math.sin(node.pulse) * 0.5 + 0.5;
                
                // Random activation
                if (Math.random() > 0.998) {
                    node.active = true;
                    setTimeout(() => { node.active = false; }, 1000);
                }
                
                if (node.mesh) {
                    node.mesh.scale.set(
                        1 + pulseIntensity * 0.3,
                        1 + pulseIntensity * 0.3,
                        1 + pulseIntensity * 0.3
                    );
                    
                    if (node.active) {
                        node.mesh.material.opacity = 1;
                        node.mesh.material.color.setHSL(0.1, 1, 0.8); // Bright orange when active
                    } else {
                        node.mesh.material.opacity = 0.7;
                        node.mesh.material.color.setHSL(0.6 + node.layer * 0.1, 0.8, 0.5);
                    }
                }
                
                // Slight orbital movement
                const orbitSpeed = 0.001;
                node.x += Math.cos(time * orbitSpeed + i) * 0.5;
                node.y += Math.sin(time * orbitSpeed + i) * 0.5;
                
                if (node.mesh) {
                    node.mesh.position.set(node.x, node.y, node.z);
                }
            });

            // Animate holographic rings
            holographicRings.forEach((ring, i) => {
                ring.rotation.z += 0.005 + i * 0.002;
                ring.material.opacity = 0.1 + Math.sin(time + i) * 0.1;
                
                // Color shifting
                const hue = (0.6 + Math.sin(time * 0.5 + i) * 0.2) % 1;
                ring.material.color.setHSL(hue, 0.8, 0.5);
            });

            // Animate data flows
            dataFlows.forEach((flow, i) => {
                flow.offset += flow.speed;
                
                // Update positions for flowing effect
                const positions = flow.line.geometry.attributes.position.array;
                for (let j = 0; j < positions.length; j += 3) {
                    positions[j + 2] += flow.speed * 20; // Move along Z axis
                    
                    // Reset when too far
                    if (positions[j + 2] > 500) {
                        positions[j + 2] = -500;
                    }
                }
                flow.line.geometry.attributes.position.needsUpdate = true;
                
                // Opacity wave
                flow.line.material.opacity = 0.3 + Math.sin(time * 2 + i) * 0.3;
            });

            // Animate brain mesh
            if (brainMesh) {
                brainMesh.rotation.x += 0.003;
                brainMesh.rotation.y += 0.005;
                brainMesh.material.opacity = 0.05 + Math.sin(time * 0.5) * 0.05;
            }

            // Mouse movement effect - more subtle
            const mouseX = (window.mouseX || 0) * 0.00005;
            const mouseY = (window.mouseY || 0) * 0.00005;
            
            camera.position.x += (mouseX * 50 - camera.position.x) * 0.02;
            camera.position.y += (-mouseY * 50 - camera.position.y) * 0.02;
            camera.lookAt(scene.position);

            // Subtle camera orbit
            camera.position.x += Math.cos(time * 0.1) * 0.5;
            camera.position.y += Math.sin(time * 0.15) * 0.3;

            renderer.render(scene, camera);
        }

        // Track mouse movement
        document.addEventListener('mousemove', (event) => {
            window.mouseX = event.clientX - window.innerWidth / 2;
            window.mouseY = event.clientY - window.innerHeight / 2;
        });

        // Resize handler
        window.addEventListener('resize', () => {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        });

        // GSAP Animations
        gsap.registerPlugin(ScrollTrigger);

        // Hero animations
        gsap.timeline({ delay: 0.5 })
            .to('.hero-title', { opacity: 1, y: 0, duration: 1, ease: 'power3.out' })
            .to('.subtitle', { opacity: 1, y: 0, duration: 0.8, ease: 'power3.out' }, '-=0.5')
            .to('.description', { opacity: 1, y: 0, duration: 0.8, ease: 'power3.out' }, '-=0.3')
            .to('.cta-buttons', { opacity: 1, y: 0, duration: 0.8, ease: 'power3.out' }, '-=0.3');

        // Scroll-triggered animations
        gsap.utils.toArray('.fade-in').forEach((element) => {
            gsap.fromTo(element, 
                { opacity: 0, y: 50 },
                {
                    opacity: 1,
                    y: 0,
                    duration: 0.8,
                    ease: 'power3.out',
                    scrollTrigger: {
                        trigger: element,
                        start: 'top 80%',
                        end: 'bottom 20%',
                        toggleActions: 'play none none reverse'
                    }
                }
            );
        });

        gsap.utils.toArray('.slide-in-left').forEach((element) => {
            gsap.fromTo(element,
                { opacity: 0, x: -100 },
                {
                    opacity: 1,
                    x: 0,
                    duration: 0.8,
                    ease: 'power3.out',
                    scrollTrigger: {
                        trigger: element,
                        start: 'top 80%',
                        toggleActions: 'play none none reverse'
                    }
                }
            );
        });

        gsap.utils.toArray('.slide-in-right').forEach((element) => {
            gsap.fromTo(element,
                { opacity: 0, x: 100 },
                {
                    opacity: 1,
                    x: 0,
                    duration: 0.8,
                    ease: 'power3.out',
                    scrollTrigger: {
                        trigger: element,
                        start: 'top 80%',
                        toggleActions: 'play none none reverse'
                    }
                }
            );
        });

        // Project cards hover effects
        document.querySelectorAll('.project-card').forEach(card => {
            card.addEventListener('mouseenter', () => {
                gsap.to(card, {
                    scale: 1.05,
                    rotationY: 5,
                    duration: 0.3,
                    ease: 'power2.out'
                });
            });

            card.addEventListener('mouseleave', () => {
                gsap.to(card, {
                    scale: 1,
                    rotationY: 0,
                    duration: 0.3,
                    ease: 'power2.out'
                });
            });
        });

        // Skill items animation
        document.querySelectorAll('.skill-item').forEach((item, index) => {
            gsap.fromTo(item,
                { opacity: 0, scale: 0.5 },
                {
                    opacity: 1,
                    scale: 1,
                    duration: 0.5,
                    delay: index * 0.1,
                    ease: 'back.out(1.7)',
                    scrollTrigger: {
                        trigger: item.closest('.skill-category'),
                        start: 'top 80%',
                        toggleActions: 'play none none reverse'
                    }
                }
            );
        });

        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Navbar background on scroll
        window.addEventListener('scroll', () => {
            const nav = document.querySelector('nav');
            if (window.scrollY > 100) {
                nav.style.background = 'rgba(15, 20, 25, 0.95)';
            } else {
                nav.style.background = 'rgba(15, 20, 25, 0.9)';
            }
        });

        // Form submission handler
        function handleSubmit(event) {
            event.preventDefault();
            
            // Get form data
            const formData = new FormData(event.target);
            const name = formData.get('name');
            const email = formData.get('email');
            const subject = formData.get('subject');
            const message = formData.get('message');
            
            // Show success message (in a real implementation, you'd send this to a server)
            alert(`Thank you ${name}! Your message has been received. I'll get back to you soon.`);
            
            // Reset form
            event.target.reset();
        }

        // Resume download function
        function downloadResume() {
            // Create a temporary link element to trigger download
            const link = document.createElement('a');
            link.href = './ANURAAG (1).pdf'; // Path to your resume file
            link.download = 'Anuraag_Rai_S_Resume.pdf'; // Name for the downloaded file
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        // Initialize background animation
        initBackground();

        // Typing animation for hero subtitle
        function typeWriter(element, text, speed = 100) {
            let i = 0;
            element.innerHTML = '';
            function type() {
                if (i < text.length) {
                    element.innerHTML += text.charAt(i);
                    i++;
                    setTimeout(type, speed);
                }
            }
            type();
        }

        // Initialize typing animation after page load
        window.addEventListener('load', () => {
            setTimeout(() => {
                const subtitle = document.querySelector('.subtitle');
                typeWriter(subtitle, 'AI & Data Science Student', 80);
            }, 1500);
        });

        // Parallax effect for sections
        gsap.utils.toArray('.section').forEach(section => {
            gsap.fromTo(section, 
                { y: 50 },
                {
                    y: -50,
                    ease: 'none',
                    scrollTrigger: {
                        trigger: section,
                        start: 'top bottom',
                        end: 'bottom top',
                        scrub: true
                    }
                }
            );
        });

        // Contact items stagger animation
        gsap.fromTo('.contact-item',
            { opacity: 0, x: -50 },
            {
                opacity: 1,
                x: 0,
                duration: 0.6,
                stagger: 0.2,
                ease: 'power3.out',
                scrollTrigger: {
                    trigger: '.contact-info',
                    start: 'top 80%',
                    toggleActions: 'play none none reverse'
                }
            }
        );

        // Form animation
        gsap.fromTo('.contact-form',
            { opacity: 0, x: 50 },
            {
                opacity: 1,
                x: 0,
                duration: 0.8,
                ease: 'power3.out',
                scrollTrigger: {
                    trigger: '.contact-form',
                    start: 'top 80%',
                    toggleActions: 'play none none reverse'
                }
            }
        );

        // Add loading animation
        window.addEventListener('load', () => {
            gsap.to('body', { opacity: 1, duration: 0.5 });
        });
    </script>
</body>
</html>